{
  "$schema": "https://opencode.ai/config.json",
  "agent": {
    "dotfiles-manager": {
      "description": "Primary orchestrator for dotfiles repository maintenance across all environments",
      "mode": "primary",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "nvim-config": {
      "description": "Modifies and maintains Neovim configuration following LazyVim conventions",
      "mode": "subagent",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "shell-config": {
      "description": "Manages shell configuration for bash and zsh",
      "mode": "subagent",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "ui-config": {
      "description": "Manages UI configuration for niri, waybar, alacritty, and kitty",
      "mode": "subagent",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "app-config": {
      "description": "Manages application configuration for starship, git, k9s, and others",
      "mode": "subagent",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "app-installer": {
      "description": "Coordinates application installation via mise or chezmoi scripts",
      "mode": "subagent",
      "temperature": 0.3,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "mise-manager": {
      "description": "Manages tool versions in mise configuration",
      "mode": "subagent",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "script-creator": {
      "description": "Creates chezmoi hook scripts for complex installations",
      "mode": "subagent",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "custom-scripts": {
      "description": "Creates and maintains custom shell scripts in dot_local/bin/scripts/",
      "mode": "subagent",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "key-encryptor": {
      "description": "Encrypts private keys using age encryption",
      "mode": "subagent",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "key-validator": {
      "description": "Validates encrypted keys and verifies decryption",
      "mode": "subagent",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "bash": true
      },
      "permission": {
        "bash": "ask"
      }
    },
    "documentation": {
      "description": "Creates comprehensive documentation using Diátaxis framework",
      "mode": "subagent",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "ask",
        "bash": "ask"
      }
    },
    "git-manager": {
      "description": "Manages all git operations with conventional commits for automated changelog generation",
      "mode": "subagent",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "bash": true
      },
      "permission": {
        "bash": "ask"
      }
    }
  },
  "command": {
    "apply-dotfiles": {
      "description": "Apply dotfiles changes with chezmoi",
      "agent": "dotfiles-manager",
      "template": "Apply the current dotfiles changes to the system using chezmoi.\n\nBefore applying, verify:\n1. All changes have been committed with @git-manager\n2. No uncommitted changes remain\n3. The changes are appropriate for the current environment\n\nRun `chezmoi apply` to apply the changes and report the results."
    },
    "validate-config": {
      "description": "Validate all configuration files for syntax errors",
      "agent": "dotfiles-manager",
      "template": "Validate all configuration files in the dotfiles repository for syntax errors.\n\nCheck:\n1. Lua files in dot_config/nvim/ for syntax errors\n2. Shell scripts in dot_config/shell/ and dot_local/bin/scripts/ for bash syntax\n3. TOML files (mise config) for valid TOML syntax\n4. YAML files for valid YAML syntax\n5. JSON files for valid JSON syntax\n\nRun validation tools and report any errors found. Suggest fixes for any issues."
    },
    "keybindings-summary": {
      "description": "Generate keybindings summary from configs",
      "agent": "documentation",
      "template": "Generate a comprehensive keybindings summary from the dotfiles configurations.\n\nExtract and document keybindings from:\n1. dot_config/nvim/ - Neovim keybindings\n2. dot_config/niri/ - Niri window manager keybindings\n3. dot_config/shell/ - Shell aliases and functions\n4. dot_local/bin/scripts/ - Custom script shortcuts\n\nCreate a quick reference guide organized by application/context.\nFocus on the most useful and frequently used keybindings.\nFormat as markdown with clear categories and descriptions."
    },
    "check-environment": {
      "description": "Check dotfiles compatibility with current environment",
      "agent": "dotfiles-manager",
      "template": "Check if the dotfiles are compatible with the current environment.\n\nAnalyze:\n1. Current OS (Fedora, Bluefin-dx, macOS, or remote)\n2. Required tools availability (bash, zsh, neovim, etc.)\n3. Mise configuration for tool versions\n4. Environment-specific configurations\n5. Remote vs local detection\n\nReport:\n- Environment type detected\n- Compatible configurations\n- Missing tools or dependencies\n- Recommendations for the current environment"
    },
    "review-changes": {
      "description": "Review uncommitted changes in dotfiles",
      "agent": "dotfiles-manager",
      "template": "Review all uncommitted changes in the dotfiles repository.\n\nShow:\n1. Modified files (git diff)\n2. Untracked files\n3. Staged changes\n4. Summary of what changed\n\nAnalyze:\n- Are changes related to a single feature/fix?\n- Do changes follow the repository conventions?\n- Are there any potential issues or conflicts?\n- Should changes be split into multiple commits?\n\nProvide recommendations for organizing changes into commits."
    },
    "check-mise": {
      "description": "Validate and check mise tool configuration",
      "agent": "mise-manager",
      "template": "Validate the mise tool configuration and check tool versions.\n\nCheck:\n1. dot_config/mise/config.toml syntax and validity\n2. All configured tools are available\n3. Tool versions are compatible\n4. Missing tools that should be installed\n5. Outdated tools that could be updated\n\nReport:\n- Configuration validity\n- Installed tools and versions\n- Available updates\n- Recommendations for tool management"
    },
    "generate-docs": {
      "description": "Generate comprehensive documentation from configs",
      "agent": "documentation",
      "template": "Generate comprehensive documentation for the dotfiles repository.\n\nCreate documentation for:\n1. Configuration overview (what's configured and why)\n2. Installation guide (how to bootstrap)\n3. Environment setup (local vs remote)\n4. Keybindings reference (from nvim, niri, shell)\n5. Aliases and functions reference\n6. Tool versions and dependencies\n7. Troubleshooting guide\n\nUse Diátaxis framework:\n- Tutorials: Getting started\n- How-to guides: Common tasks\n- Reference: Complete lists\n- Explanation: Why things are configured this way\n\nOutput: Updated docs/ directory with all documentation."
    }
  }
}

