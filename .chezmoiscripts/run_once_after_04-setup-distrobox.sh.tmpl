#!/bin/bash
set -euo pipefail

{{ if not .remote -}}

echo "üì¶ Setting up distrobox containers"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# Check if distrobox is available
if ! command -v distrobox >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  distrobox not found. Skipping container setup."
    echo "   Install distrobox to use this feature:"
    echo "   https://distrobox.it"
    exit 0
fi

# Check if the distrobox.ini file exists
DISTROBOX_INI="$HOME/.config/distrobox/distrobox.ini"
if [ ! -f "$DISTROBOX_INI" ]; then
    echo "‚ùå distrobox.ini not found at $DISTROBOX_INI"
    exit 1
fi

echo "üìã Using configuration: $DISTROBOX_INI"
echo ""

# Check if container already exists
if distrobox list | grep -q "base-applications-toolbox"; then
    echo "‚úÖ base-applications-toolbox already exists"
    echo ""
    echo "To recreate the container, run:"
    echo "  distrobox assemble create --replace"
    exit 0
fi

# Create the container using distrobox assemble
echo "üöÄ Creating distrobox containers..."
echo "   This may take several minutes on first run..."
echo ""

if distrobox assemble create --file "$DISTROBOX_INI"; then
    echo ""
    echo "‚úÖ Distrobox containers created successfully!"
    echo ""

    # Run the setup script inside the container to install yay and AUR packages
    echo "üîß Running setup script inside container..."
    echo "   This will install yay and AUR packages (may take several minutes)..."
    echo ""

    if distrobox enter base-applications-toolbox -- bash -c "setup-base-applications-toolbox.sh"; then
        echo ""
        echo "‚úÖ Container setup complete!"
    else
        echo ""
        echo "‚ö†Ô∏è  Container setup script failed"
        echo "   You can run it manually later:"
        echo "   distrobox enter base-applications-toolbox"
        echo "   setup-base-applications-toolbox.sh"
    fi

    echo ""
    echo "üì§ Exporting applications to host..."
    echo "   This will make applications available in your host's application menu..."
    echo ""

    # Export all installed applications to the host
    # Using || true to handle cases where app might not be installed
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app beekeeper-studio" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app storageexplorer" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app teams-for-linux" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app zen-browser" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app legcord" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app obs" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app bruno" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app polypane" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app anytype" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app vivaldi-snapshot" || true
    distrobox enter base-applications-toolbox -- bash -c "distrobox-export --app cursor" || true

    echo ""
    echo "‚úÖ Applications exported to host!"
    echo ""
    echo "üìù Available containers:"
    distrobox list
    echo ""
    echo "üí° To enter the container, run:"
    echo "   distrobox enter base-applications-toolbox"
    echo ""
    echo "üí° Exported applications are now available in your application menu!"
else
    echo ""
    echo "‚ùå Failed to create distrobox containers"
    echo "   Check the logs above for errors"
    exit 1
fi

{{ end -}}

