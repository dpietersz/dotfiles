#!/bin/bash
set -euo pipefail

{{ if not .remote -}}

echo "üåê Installing browserpass"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# Check if browserpass is already installed
if command -v browserpass >/dev/null; then
    echo "‚úÖ Browserpass already installed"
    exit 0
fi

# Install browserpass native host
echo "üì¶ Installing browserpass native host..."

{{- if eq .chezmoi.os "darwin" }}
if command -v brew >/dev/null; then
    brew tap amar1729/formulae
    brew install browserpass
else
    echo "‚ùå Homebrew not installed. Cannot install browserpass."
    exit 1
fi
{{- else if eq .chezmoi.osRelease.id "bluefin" }}
echo "Installing browserpass via rpm-ostree..."
rpm-ostree install browserpass
echo "‚ö†Ô∏è  Reboot required to complete browserpass installation"
echo "   After reboot, manually install browser extensions from:"
echo "   - Firefox: https://addons.mozilla.org/firefox/addon/browserpass-ce/"
echo "   - Chrome: https://chrome.google.com/webstore/detail/browserpass/naepdomgkenhinolocfifgehidddafch"
exit 0
{{- else if or (eq .chezmoi.osRelease.id "fedora") (eq .chezmoi.osRelease.idLike "fedora") }}
if command -v dnf >/dev/null; then
    sudo dnf install -y browserpass
fi
{{- else }}
echo "‚ùå No installation instructions for browserpass on your distribution."
exit 1
{{- end }}

echo "‚úÖ Browserpass native host installed"

# Configure browserpass for browsers
echo "‚öôÔ∏è  Configuring browserpass for browsers..."

{{- if eq .chezmoi.os "darwin" }}
# macOS configuration
BROWSERPASS_CMD="browserpass"

# Firefox (macOS location)
if [ -d "$HOME/Library/Application Support/Firefox" ]; then
    $BROWSERPASS_CMD configure firefox
    echo "‚úÖ Firefox configured"
fi

# Chrome (macOS)
if [ -d "/Applications/Google Chrome.app" ]; then
    $BROWSERPASS_CMD configure chrome
    echo "‚úÖ Chrome configured"
fi

# Zen browser (Firefox-based, uses Firefox native messaging)
if [ -d "/Applications/Zen Browser.app" ]; then
    $BROWSERPASS_CMD configure firefox
    echo "‚úÖ Zen browser configured"
fi

{{- else }}
# Linux configuration
BROWSERPASS_CMD="browserpass-linux64"

# Firefox (Linux location)
if [ -d "$HOME/.mozilla/firefox" ]; then
    $BROWSERPASS_CMD configure firefox
    echo "‚úÖ Firefox configured"
fi

# Chrome/Chromium (Linux)
if command -v google-chrome >/dev/null || command -v chromium >/dev/null; then
    $BROWSERPASS_CMD configure chrome
    echo "‚úÖ Chrome configured"
fi

# Zen browser (Firefox-based, uses Firefox native messaging)
# Check for regular or Flatpak installation
ZEN_INSTALLED=false
if command -v zen-browser >/dev/null 2>&1; then
    ZEN_INSTALLED=true
elif flatpak list 2>/dev/null | grep -q "zen"; then
    ZEN_INSTALLED=true
fi

if [ "$ZEN_INSTALLED" = true ]; then
    # Configure Firefox native messaging (Zen uses Mozilla paths)
    $BROWSERPASS_CMD configure firefox

    # For Flatpak, also copy to Flatpak-specific location
    if flatpak list 2>/dev/null | grep -q "io.github.zen_browser.zen"; then
        FLATPAK_ZEN_DIR="$HOME/.var/app/io.github.zen_browser.zen/.zen/native-messaging-hosts"
        mkdir -p "$FLATPAK_ZEN_DIR"
        if [ -f "$HOME/.mozilla/native-messaging-hosts/com.github.browserpass.native.json" ]; then
            cp "$HOME/.mozilla/native-messaging-hosts/com.github.browserpass.native.json" "$FLATPAK_ZEN_DIR/"
        fi
    fi

    echo "‚úÖ Zen browser configured"
fi

{{- end }}

echo ""
echo "‚úÖ Browserpass installation complete!"
echo ""
echo "üìù Next steps:"
echo "   1. Install browser extensions:"
echo "      - Firefox: https://addons.mozilla.org/firefox/addon/browserpass-ce/"
echo "      - Chrome/Zen: https://chrome.google.com/webstore/detail/browserpass/naepdomgkenhinolocfifgehidddafch"
echo ""

{{ end -}}