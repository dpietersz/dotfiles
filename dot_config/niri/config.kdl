// Auto-start waybar
spawn-at-startup "waybar"

workspace "Home"
workspace "Work"
workspace "Coding"
workspace "Music"

// Define keybindings
binds {
    // App launcher
    // Mod+Space { spawn "fuzzel"; }
    
    // Exit nri
    Ctrl+Alt+Delete { quit; }

    // Overview
    Mod+Shift+Slash { show-hotkey-overlay; }
    Mod+O { toggle-overview; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Open a Terminal: kitty" { spawn "kitty"; }
    Mod+Space hotkey-overlay-title="Run an Application: fuzzel" { spawn "bash" "-c" "pgrep fuzzel && pkill fuzzel || fuzzel"; }
    Ctrl+Alt+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }
    Mod+Backspace hotkey-overlay-title="Logout: wlogout" { spawn "bash" "-c" "pgrep wlogout && pkill wlogout || wlogout -c 15 -b 6 -m 400"; }
    Mod+Ctrl+Space hotkey-overlay-title="Toggle bar: waybar" { spawn "bash" "-c" "$HOME/.config/niri/scripts/toggle-waybar.sh"; }
    Mod+Ctrl+I hotkey-overlay-title="Relaunch bar: waybar" { spawn "bash" "-c" "$HOME/.config/waybar/custom_modules/launch.sh"; }
    Mod+N hotkey-overlay-title="Toggle Notification: swaync" { spawn "swaync-client" "-t"; }
    Mod+Shift+Space hotkey-overlay-title="Lock bar: waybar" { spawn "bash" "-c" "$HOME/.config/niri/scripts/lock-waybar.sh"; }
    XF86Calculator hotkey-overlay-title="Calculator: galculator" { spawn "galculator";}

    // === Volume & Media Controls ===
    // Volume keys work even when the session is locked
    XF86AudioRaiseVolume allow-when-locked=true { spawn "bash" "-c" "$HOME/.config/niri/scripts/volume_up.sh"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "bash" "-c" "$HOME/.config/niri/scripts/volume_down.sh"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    // Media player controls
    XF86AudioNext  allow-when-locked=true { spawn "playerctl" "next"; }
    XF86AudioPause allow-when-locked=true { spawn "playerctl" "play-pause"; }
    XF86AudioPlay  allow-when-locked=true { spawn "playerctl" "play-pause"; }
    XF86AudioPrev  allow-when-locked=true { spawn "playerctl" "previous"; }

    // === Window Management ===
    Mod+Q repeat=false { close-window; }
    Mod+Alt+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+W { toggle-window-floating; }
    Mod+Ctrl+W { switch-focus-between-floating-and-tiling; }
    Mod+V { toggle-column-tabbed-display; }

    // === Focus Navigation ===
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    // Mod+J     { focus-window-down; }
    // Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    // === Window Movement ===
    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down  { move-window-down; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right; }
    Mod+Shift+H     { move-column-left; }
    // Mod+Shift+J     { move-window-down; }
    // Mod+Shift+K     { move-window-up; }
    Mod+Shift+L     { move-column-right; }

    // === Column Navigation ===
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    // === Monitor Navigation ===
    Mod+Ctrl+Left  { focus-monitor-left; }
    //Mod+Ctrl+Down  { focus-monitor-down; }
    //Mod+Ctrl+Up    { focus-monitor-up; }
    Mod+Ctrl+Right { focus-monitor-right; }
    Mod+Ctrl+H     { focus-monitor-left; }
    Mod+Ctrl+J     { focus-monitor-down; }
    Mod+Ctrl+K     { focus-monitor-up; }
    Mod+Ctrl+L     { focus-monitor-right; }

    // === Move to Monitor ===
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // === Workspace Navigation ===
    //Mod+Page_Down      { focus-workspace-down; }
    //Mod+Page_Up        { focus-workspace-up; }
    Mod+J                { focus-workspace-down; }
    Mod+K                { focus-workspace-up; }
    Mod+Ctrl+Down        { focus-workspace-down; }
    Mod+Ctrl+Up          { focus-workspace-up; }
    Mod+Ctrl+Alt+Down    { move-column-to-workspace-down; }
    Mod+Ctrl+Alt+Up      { move-column-to-workspace-up; }
    //Mod+Ctrl+U         { move-column-to-workspace-down; }
    //Mod+Ctrl+I         { move-column-to-workspace-up; }

    // === Move Workspaces ===
    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+J         { move-workspace-down; }
    Mod+Shift+K         { move-workspace-up; }

    // === Mouse Wheel Navigation ===
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // === Numbered Workspaces ===
    Mod+1 { focus-workspace "Home"; }
    Mod+2 { focus-workspace "Work"; }
    Mod+3 { focus-workspace "Music"; }
    Mod+4 { focus-workspace "Coding"; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    // === Move to Numbered Workspaces ===
    Mod+Shift+1 { move-column-to-workspace "Home"; }
    Mod+Shift+2 { move-column-to-workspace "Work"; }
    Mod+Shift+3 { move-column-to-workspace "Music"; }
    Mod+Shift+4 { move-column-to-workspace "Coding"; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // === Column Management ===
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    //Mod+Comma { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    // === Sizing & Layout ===
    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+Ctrl+F { expand-column-to-available-width; }
    // Mod+C is used for color picker below
    Mod+Ctrl+C { center-column; }

    // === Manual Sizing ===
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // === Screenshots ===
    Alt+Shift+S { screenshot; }
    XF86Launch1 { screenshot; }
    Ctrl+XF86Launch1 { screenshot-screen; }
    Alt+XF86Launch1 { screenshot-window; }
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }


}

// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
    gaps 9
    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    // Center a single column on a workspace
    always-center-single-column
    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.5
        proportion 0.66667
        proportion 1.0
        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }
    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }
    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}
    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.
    border {
        width 2
        active-color "#cba6f7"
        inactive-color "#45475a"
        urgent-color "#f5c2e7"
    }
    focus-ring {
	off
        width 2
        active-color   "#808080"      // Medium gray
        inactive-color "#505050"      // Dark gray
    }
    shadow {
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }
    struts {
    }
}

environment {
  XDG_CURRENT_DESKTOP "niri"
  MOZ_ENABLE_WAYLAND "1"
  QT_QPA_PLATFORM "wayland"
  ELECTRON_OZONE_PLATFORM_HINT "wayland"
  QT_QPA_PLATFORMTHEME "gtk3"
  QT_QPA_PLATFORMTHEME_QT6 "gtk3"
  TERMINAL "ghostty"
  XCURSOR_THEME "Bibata-Modern-Ice"
  XCURSOR_SIZE "24"
}

hotkey-overlay {
    skip-at-startup
}

// Screenshot configuration
// Reference: https://github.com/YaLTeR/niri/wiki/Configuration:-Miscellaneous
screenshot-path "~/dev/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

window-rule {
    geometry-corner-radius 9
    clip-to-geometry true
    draw-border-with-background false
}

