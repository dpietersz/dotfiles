[base-applications-toolbox]
image=quay.io/toolbx/arch-toolbox:latest
init=false
nvidia=false
pull=true
root=false
replace=true
start_now=false

# Set up Chaotic-AUR repository for pre-built AUR packages
pre_init_hooks="pacman-key --init"
pre_init_hooks="pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com"
pre_init_hooks="pacman-key --lsign-key 3056513887B78AEB"
pre_init_hooks="pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'"
pre_init_hooks="pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'"
pre_init_hooks="echo -e '[chaotic-aur]\\nInclude = /etc/pacman.d/chaotic-mirrorlist' >> /etc/pacman.conf"
pre_init_hooks="pacman -Sy --noconfirm"

# Install official repo packages (including build tools for yay)
additional_packages="base-devel git pass gnupg browserpass emacs"

# Install yay AUR helper (as container user)
init_hooks="cd /tmp && git clone https://aur.archlinux.org/yay.git && cd /tmp/yay && makepkg --noconfirm -si && cd /tmp && rm -rf /tmp/yay"

# Install AUR packages using yay (init_hooks run as container user)
init_hooks="yay -S --noconfirm --needed beekeeper-studio || true"
init_hooks="yay -S --noconfirm --needed storageexplorer || true"
init_hooks="yay -S --noconfirm --needed teams-for-linux || true"
init_hooks="yay -S --noconfirm --needed zen-browser-bin || true"
init_hooks="yay -S --noconfirm --needed legcord || true"
init_hooks="yay -S --noconfirm --needed obs-studio-git || true"
init_hooks="yay -S --noconfirm --needed bruno-bin || true"
init_hooks="yay -S --noconfirm --needed polypane || true"
init_hooks="yay -S --noconfirm --needed anytype-bin || true"
init_hooks="yay -S --noconfirm --needed vivaldi-snapshot || true"
init_hooks="yay -S --noconfirm --needed vivaldi-snapshot-ffmpeg-codecs || true"
init_hooks="yay -S --noconfirm --needed cursor-bin || true"
init_hooks="yay -S --noconfirm --needed zed-git || true"
init_hooks="yay -S --noconfirm --needed obsidian-bin || true"

# Export applications to host (makes them available in host's application menu)
# Note: App names verified with: find /usr/share/applications -name "*.desktop"
init_hooks="distrobox-export --app beekeeper-studio || true"
init_hooks="distrobox-export --app StorageExplorer || true"
init_hooks="distrobox-export --app teams-for-linux || true"
init_hooks="distrobox-export --app zen-browser || true"
init_hooks="distrobox-export --app legcord || true"
init_hooks="distrobox-export --app com.obsproject.Studio || true"
init_hooks="distrobox-export --app bruno || true"
init_hooks="distrobox-export --app polypane || true"
init_hooks="distrobox-export --app anytype || true"
init_hooks="distrobox-export --app vivaldi-snapshot || true"
init_hooks="distrobox-export --app cursor || true"
init_hooks="distrobox-export --app zed || true"
init_hooks="distrobox-export --app obsidian || true"
init_hooks="distrobox-export --app emacs || true"
