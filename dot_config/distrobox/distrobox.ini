[base-applications-toolbox]
image=quay.io/fedora/fedora-toolbox:41
init=false
nvidia=false
pull=true
root=false
replace=true
start_now=false

# Enable RPM Fusion Free repository (for OBS Studio and multimedia codecs)
pre_init_hooks="dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-41.noarch.rpm || true"

# Add Beekeeper Studio official repository
pre_init_hooks="curl -o /etc/yum.repos.d/beekeeper-studio.repo https://rpm.beekeeperstudio.io/beekeeper-studio.repo && rpm --import https://rpm.beekeeperstudio.io/beekeeper.key || true"

# Add Vivaldi official repository
pre_init_hooks="dnf config-manager addrepo --from-repofile=https://repo.vivaldi.com/archive/vivaldi-fedora.repo || true"

# Enable COPR repositories for various applications
pre_init_hooks="dnf copr enable -y sneexy/zen-browser || true"
pre_init_hooks="dnf copr enable -y che/zed || true"
pre_init_hooks="dnf copr enable -y grahamwhiteuk/bruno || true"
pre_init_hooks="dnf copr enable -y alxhr0/Obsidian || true"

# Install official Fedora packages
additional_packages="pass gnupg emacs git wget curl"

# Install applications from repositories
init_hooks="dnf install -y beekeeper-studio || true"
init_hooks="dnf install -y obs-studio || true"
init_hooks="dnf install -y vivaldi-snapshot || true"
init_hooks="dnf install -y zen-browser || true"
init_hooks="dnf install -y zed || true"
init_hooks="dnf install -y bruno || true"
init_hooks="dnf install -y obsidian || true"

# Download and install AppImage applications
# Create directory for AppImages
init_hooks="mkdir -p ~/.local/bin/appimages || true"

# Cursor AI Editor (AppImage)
init_hooks="wget -O ~/.local/bin/appimages/cursor.AppImage 'https://downloader.cursor.sh/linux/appImage/x64' && chmod +x ~/.local/bin/appimages/cursor.AppImage || true"

# Legcord (AppImage) - Discord client
init_hooks="wget -O ~/.local/bin/appimages/legcord.AppImage $(curl -s https://api.github.com/repos/Legcord/Legcord/releases/latest | grep browser_download_url | grep AppImage | cut -d : -f 2,3 | tr -d '\"' | tr -d ' ' | head -1) && chmod +x ~/.local/bin/appimages/legcord.AppImage || true"

# Polypane (AppImage)
init_hooks="wget -O ~/.local/bin/appimages/polypane.AppImage 'https://app.polypane.app/download/linux/x64' && chmod +x ~/.local/bin/appimages/polypane.AppImage || true"

# Anytype (AppImage)
init_hooks="wget -O ~/.local/bin/appimages/anytype.AppImage $(curl -s https://api.github.com/repos/anyproto/anytype-ts/releases/latest | grep browser_download_url | grep AppImage | cut -d : -f 2,3 | tr -d '\"' | tr -d ' ' | head -1) && chmod +x ~/.local/bin/appimages/anytype.AppImage || true"

# Note: teams-for-linux and Azure Storage Explorer are Snap-only
# They cannot be easily installed in distrobox without Snap support
# Consider using Flatpak versions on the host instead

# Export applications to host (makes them available in host's application menu)
init_hooks="distrobox-export --app beekeeper-studio || true"
init_hooks="distrobox-export --app zen-browser || true"
init_hooks="distrobox-export --app com.obsproject.Studio || true"
init_hooks="distrobox-export --app bruno || true"
init_hooks="distrobox-export --app vivaldi-snapshot || true"
init_hooks="distrobox-export --app zed || true"
init_hooks="distrobox-export --app obsidian || true"
init_hooks="distrobox-export --app emacs || true"

# Export AppImage applications (only if they exist)
init_hooks="test -f ~/.local/bin/appimages/cursor.AppImage && distrobox-export --bin ~/.local/bin/appimages/cursor.AppImage --export-path ~/.local/bin || true"
init_hooks="test -f ~/.local/bin/appimages/legcord.AppImage && distrobox-export --bin ~/.local/bin/appimages/legcord.AppImage --export-path ~/.local/bin || true"
init_hooks="test -f ~/.local/bin/appimages/polypane.AppImage && distrobox-export --bin ~/.local/bin/appimages/polypane.AppImage --export-path ~/.local/bin || true"
init_hooks="test -f ~/.local/bin/appimages/anytype.AppImage && distrobox-export --bin ~/.local/bin/appimages/anytype.AppImage --export-path ~/.local/bin || true"
