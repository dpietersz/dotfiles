#!/usr/bin/env bash
# Create daily-driver distrobox containers from configuration files
# This script reads INI files from ~/.config/distrobox/ and creates containers

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
DISTROBOX_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/distrobox"
CONTAINERS=("daily-driver-arch" "daily-driver-fedora")

# Functions
print_header() {
    echo -e "${BLUE}=== $1 ===${NC}"
}

print_success() {
    echo -e "${GREEN}✓ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠ $1${NC}"
}

print_error() {
    echo -e "${RED}✗ $1${NC}"
}

check_dependencies() {
    print_header "Checking dependencies"
    
    local missing_deps=()
    
    if ! command -v distrobox &> /dev/null; then
        missing_deps+=("distrobox")
    fi
    
    if ! command -v podman &> /dev/null; then
        missing_deps+=("podman")
    fi
    
    if [ ${#missing_deps[@]} -gt 0 ]; then
        print_error "Missing dependencies: ${missing_deps[*]}"
        echo "Please install the missing dependencies and try again."
        return 1
    fi
    
    print_success "All dependencies found"
}

verify_config_files() {
    print_header "Verifying configuration files"
    
    local missing_files=()
    
    for container in "${CONTAINERS[@]}"; do
        local config_file="$DISTROBOX_CONFIG_DIR/${container}.ini"
        if [ ! -f "$config_file" ]; then
            missing_files+=("$config_file")
        else
            print_success "Found: $config_file"
        fi
    done
    
    if [ ${#missing_files[@]} -gt 0 ]; then
        print_error "Missing configuration files:"
        printf '%s\n' "${missing_files[@]}"
        return 1
    fi
}

verify_hook_files() {
    print_header "Verifying hook files"
    
    local hooks_dir="${XDG_DATA_HOME:-$HOME/.local/share}/distrobox/hooks"
    local missing_hooks=()
    
    for container in "${CONTAINERS[@]}"; do
        local hook_file="$hooks_dir/${container}-export-gui.sh"
        if [ ! -f "$hook_file" ]; then
            missing_hooks+=("$hook_file")
        else
            print_success "Found: $hook_file"
        fi
    done
    
    if [ ${#missing_hooks[@]} -gt 0 ]; then
        print_warning "Missing hook files (containers will still work, but won't export apps):"
        printf '%s\n' "${missing_hooks[@]}"
    fi
}

create_containers() {
    print_header "Creating containers"
    
    for container in "${CONTAINERS[@]}"; do
        echo ""
        echo "Creating $container..."
        
        if distrobox create --config-file "$DISTROBOX_CONFIG_DIR/${container}.ini" --replace; then
            print_success "Created: $container"
        else
            print_error "Failed to create: $container"
            return 1
        fi
    done
}

list_containers() {
    print_header "Listing created containers"
    
    distrobox list | grep -E "daily-driver-(arch|fedora)" || print_warning "No daily-driver containers found"
}

main() {
    echo ""
    print_header "Daily Driver Container Setup"
    echo ""
    
    # Check dependencies
    if ! check_dependencies; then
        return 1
    fi
    echo ""
    
    # Verify configuration files
    if ! verify_config_files; then
        return 1
    fi
    echo ""
    
    # Verify hook files
    verify_hook_files
    echo ""
    
    # Ask for confirmation
    echo -e "${YELLOW}This will create/replace the following containers:${NC}"
    printf '%s\n' "${CONTAINERS[@]}"
    echo ""
    read -p "Continue? (y/N) " -n 1 -r
    echo ""
    
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_warning "Cancelled"
        return 0
    fi
    echo ""
    
    # Create containers
    if ! create_containers; then
        return 1
    fi
    echo ""
    
    # List containers
    list_containers
    echo ""
    
    print_success "Setup complete!"
    echo ""
    echo "You can now enter the containers with:"
    echo "  distrobox enter daily-driver-arch"
    echo "  distrobox enter daily-driver-fedora"
}

main "$@"

