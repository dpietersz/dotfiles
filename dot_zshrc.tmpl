{{- $remote := or (env "SSH_CONNECTION" | not | not) (env "KUBERNETES_SERVICE_HOST" | not | not) (env "container" | not | not) (env "REMOTE_CONTAINERS" | not | not) (stat "/.dockerenv" | not | not) -}}

# enable zsh history
HISTFILE="$HOME/.zsh_history"
HISTSIZE=60000
SAVEHIST=50000

if [[ -d $HOME/.local/bin ]] ; then 
  export PATH=$HOME/.local/bin:$PATH
fi 

# add the manually downloaded neovim distribution to the path
if [[ -d $HOME/.local/bin/nvim-bin/bin ]] ; then 
  export PATH=$HOME/.local/bin/nvim-bin/bin:$PATH
fi 

# add the manually downloaded node 16 lts distribution to the path
if [[ -d $HOME/.local/bin/node-bin/bin ]] ; then 
  export PATH=$HOME/.local/bin/node-bin/bin:$PATH
fi 

# edit PATH
{{ if eq .chezmoi.os "linux" -}}
export PATH=$HOME/.cargo/bin:$PATH
{{- end}}

{{if not $remote -}}
# setup gpg-agent ssh
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
        export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi
{{- end}}

autoload -Uz compinit && compinit

# I need (neo)vim
if command -v nvim > /dev/null ; then
  export EDITOR="nvim"
  export VISUAL="nvim"
elif command -v vim > /dev/null ; then
  export EDITOR="vim"
  export VISUAL="vim"
fi

{{if and .chezmoi.osRelease (eq .chezmoi.osRelease.id "ubuntu") -}} alias ll="exa -bghl" {{- else -}} alias ll="exa -bghl --git" {{- end}}

# enable usage of .envrc files
if command -v direnv > /dev/null ; then
  eval "$(direnv hook zsh)"
fi

# enable layer 8 error correction
if command -v thefuck > /dev/null ; then
  eval $(thefuck --alias slap)
fi

# enable zsh vi-mode
bindkey -v
export KEYTIMEOUT=1 # make switching between modes faster

# enable the starship prompt
if command -v starship > /dev/null ; then
  eval "$(starship init zsh)"
fi

# enable fzf autocompletion and key-bindings if found
if command -v fzf > /dev/null ; then

fzf_shell_script_location={{if and .chezmoi.osRelease (eq .chezmoi.osRelease.id "ubuntu" "debian") -}} '/usr/share/doc/fzf/examples' {{- else -}} '/usr/share/fzf/shell' {{- end}}

{{if eq .chezmoi.os "darwin"}}

if [[ -d /opt/homebrew/Cellar/fzf ]] ; then
  fzf_shell_script_location="/opt/homebrew/Cellar/fzf/$(fzf --version | cut -d ' ' -f 1)/shell"
fi

{{- end}}

source $fzf_shell_script_location/key-bindings.zsh

fi

if command -v kubectl > /dev/null ; then
  source <(kubectl completion zsh)
fi

{{if not $remote -}}
if command -v zellij > /dev/null ; then
  eval "$(zellij setup --generate-auto-start zsh)"
  eval "$(zellij setup --generate-completion zsh)"
fi
{{- end}}

if [[ -d .zsh/zsh-autosuggestions ]] ; then
  source .zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# syntax highlighting needs to be at the end because of reasons
if [[ -d .zsh/zsh-syntax-highlighting ]] ; then
  source .zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
